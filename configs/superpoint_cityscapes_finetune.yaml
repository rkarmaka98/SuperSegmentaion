# Configuration for training SuperPoint on the Cityscapes dataset
# Segmentation labels can be reduced to 4 coarse categories

data:
    dataset: 'Cityscapes'
    root: 'datasets/Cityscapes'  # path to Cityscapes images
    labels: logs/magicpoint_synth_homoAdapt_cityscape/predictions
    segmentation_labels: 'datasets/Cityscapes/gtFine'  # segmentation masks
    cache_in_memory: false
    load_segmentation: true
    reduce_to_4_categories: true
    num_segmentation_classes: 4
    gaussian_label:
        enable: true
        params:
            GaussianBlur: {sigma: 0.2}
    preprocessing:
        resize: [512, 1024] #[512, 1024]  # images are downsampled for training
    augmentation:
        photometric:
            enable: true
            primitives: [
                'random_brightness', 'random_contrast', 'additive_speckle_noise',
                'additive_gaussian_noise', 'additive_shade', 'motion_blur']
            params:
                random_brightness: {max_abs_change: 50}
                random_contrast: {strength_range: [0.5, 1.5]}
                additive_gaussian_noise: {stddev_range: [0, 10]}
                additive_speckle_noise: {prob_range: [0, 0.0035]}
                additive_shade:
                    transparency_range: [-0.5, 0.5]
                    kernel_size_range: [100, 150]
                motion_blur: {max_kernel_size: 3}
        homographic:
            enable: false     # samples per image for aggregation
            max_angle: 0.15             # in radians (~10Â°)
            translate: 0.02              # relative to image size
            scale: [0.95, 1.05]
            perspective: 0.03
            allow_artifacts: true
    warped_pair:
        enable: true
        params:
            translation: true
            rotation: true
            scaling: true
            perspective: false
            scaling_amplitude: 0.05
            perspective_amplitude_x: 0.01
            perspective_amplitude_y: 0.01
            patch_ratio: 0.9
            max_angle: 0.05
            allow_artifacts: true
            num_homographies: 1
        valid_border_margin: 0

front_end_model: 'Train_model_heatmap'  # use heatmap detector
training:
    workers_train: 8
    workers_val: 2
    workers_test: 2

model:
    name: 'SuperPointNet_gauss2'
    params: {}
    detector_loss:
        loss_type: 'softmax'

    batch_size: 8
    eval_batch_size: 8
    learning_rate: 0.0001  # reasonable learning rate
    detection_threshold: 0.015
    lambda_loss: 0.3
    lambda_segmentation: 1.0
    num_segmentation_classes: 4
    compute_miou: true  # log mIoU for each batch
    nms: 5
    dense_loss:
        enable: false
        params:
            descriptor_dist: 4
            lambda_d: 800
    sparse_loss:
        enable: true
        params:
            num_matching_attempts: 100
            num_masked_non_matches_per_match: 20
            lamda_d: 0.5
            dist: 'cos'
            method: '2d'
    other_settings: 'train 2d, gauss 0.2'

retrain: True
reset_iter: True
train_iter: 100 #170000
validation_interval: 10 #2000
tensorboard_interval: 25
save_interval: 25 #2000
validation_size: 5
truncate: 1000

pretrained: 'logs/superpoint_coco/checkpoints/superPointNet_2300_checkpoint.pth.tar'
    # pretrained: 'logs/superpoint_coco_heat2_0/checkpoints/superPointNet_90000_checkpoint.pth.tar'

# enable mixed precision training
amp: true
amp_dtype: fp16
grad_scaler:
    enabled: true
    init_scale: 65536
    growth_interval: 2000

